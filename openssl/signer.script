keytool -genkeypair -alias jarsigner -keyalg RSA -keystore signer.jks -validity 1000 -storetype jks
keytool -list -keystore signer.jks
jarsigner -verbose -keystore signer.jks -signedjar sas-web-1.1.3-SNAPSHOT-signed.jar target/sas-web-1.1.3-SNAPSHOT.jar jarsigner
#jarsigner -verbose -keystore oracle.keystore -signedjar sas-web-1.1.3-SNAPSHOT-signed.jar target/sas-web-1.1.3-SNAPSHOT.jar  oracle
jarsigner -verify sas-web-1.1.3-SNAPSHOT-signed.jar

keytool -certreq -file signer.csr -alias jarsigner -keystore signer.jks
keytool -printcertreq -file signer.csr

keytool -genkeypair -alias ECWise_CA -keyalg RSA -keystore ecwise_ca.jks -validity 1000 -storetype jks
keytool -gencert -infile signer.csr -outfile signer.cer -keystore ecwise_ca.jks -alias ECWise_CA -validity 1000
keytool -exportcert -file ecwise_ca.cer -keystore ecwise_ca.jks -alias ECWise_CA
keytool -importcert -keystore signer.jks -file ecwise_ca.cer -alias ECWise_CA -trustcacerts
keytool -importcert -keystore signer.jks -file signer.cer -alias jarsigner -trustcacerts

===========

-- print cert 
keytool -printcert -file signer.cer -rfc
keytool -printcert -jarfile sas-web-1.1.3-SNAPSHOT-signed.jar -rfc

-- check cer public key
openssl x509 -inform DER -in signer.cer -pubkey
keytool -exportcert -keystore signer.jks -file original.cer -alias jarsigner
openssl x509 -inform DER -in original.cer -pubkey









PKCS系列标准 
PKCS是由美国RSA数据安全公司及其合作伙伴制定的一组公钥密码学标准，其中包括证书申请、证书更新、证书作废表发布、扩展证书内容以及数字签名、数字信封的格式等方面的一系列相关协议。到1999年底，PKCS已经公布了以下标准： 
PKCS#1：定义RSA公开密钥算法加密和签名机制，主要用于组织PKCS#7中所描述的数字签名和数字信封。 
PKCS#3：定义Diffie-Hellman密钥交换协议。 
PKCS#5：描述一种利用从口令派生出来的安全密钥加密字符串的方法。使用MD2或MD5 从口令中派生密钥，并采用DES-CBC模式加密。主要用于加密从一个计算机传送到另一个计算机的私人密钥，不能用于加密消息。 
PKCS#6：描述了公钥证书的标准语法，主要描述X.509证书的扩展格式。 
PKCS#7：定义一种通用的消息语法，包括数字签名和加密等用于增强的加密机制，PKCS#7与PEM兼容，所以不需其他密码操作，就可以将加密的消息转换成PEM消息。 
PKCS#8：描述私有密钥信息格式，该信息包括公开密钥算法的私有密钥以及可选的属性集等。 
PKCS#9：定义一些用于PKCS#6证书扩展、PKCS#7数字签名和PKCS#8私钥加密信息的属性类型。 
PKCS#10：描述证书请求语法。 
PKCS#11：称为Cyptoki，定义了一套独立于技术的程序设计接口，用于智能卡和PCMCIA卡之类的加密设备。 
PKCS#12：描述个人信息交换语法标准。描述了将用户公钥、私钥、证书和其他相关信息打包的语法。 
PKCS#13：椭圆曲线密码体制标准。 
PKCS#14：伪随机数生成标准。 
PKCS#15：密码令牌信息格式标准。


PEM - Privacy Enhanced Mail
PKCS 全称是 Public-Key Cryptography Standards ，是由 RSA 实验室与其它安全系统开发商为促进公钥密码的发展而制订的一系列标准，PKCS 目前共发布过 15 个标准。 常用的有：
PKCS#7 Cryptographic Message Syntax Standard
PKCS#10 Certification Request Standard
PKCS#12 Personal Information Exchange Syntax Standard
X.509是常见通用的证书格式。所有的证书都符合为Public Key Infrastructure (PKI) 制定的 ITU-T X509 国际标准。
PKCS#7 常用的后缀是： .P7B .P7C .SPC
PKCS#12 常用的后缀有： .P12 .PFX
X.509 DER 编码(ASCII)的后缀是： .DER .CER .CRT
X.509 PAM 编码(Base64)的后缀是： .PEM .CER .CRT
.cer/.crt是用于存放证书，它是2进制形式存放的，不含私钥。
.pem跟crt/cer的区别是它以Ascii来表示。
pfx/p12用于存放个人证书/私钥，他通常包含保护密码，2进制方式
p10是证书请求
p7r是CA对证书请求的回复，只用于导入
p7b以树状展示证书链(certificate chain)，同时也支持单个证书，不含私钥。

der,cer文件一般是二进制格式的，只放证书，不含私钥
crt文件可能是二进制的，也可能是文本格式的，应该以文本格式居多，功能同der/cer
pem文件一般是文本格式的，可以放证书或者私钥，或者两者都有
pem如果只含私钥的话，一般用.key扩展名，而且可以有密码保护


.DER = 扩展名DER用于二进制DER编码的证书。这些证书也可以用CER或者CRT作为扩展名。比较合适的说法是“我有一个DER编码的证书”，而不是“我有一个DER证书”。
.PEM = 扩展名PEM用于ASCII(Base64)编码的各种X.509 v3 证书。文件开始由一行"—– BEGIN …“开始。


三 x509到pfx
pkcs12 -export –in keys/client1.crt -inkey keys/client1.key -out keys/client1.pfx
四 PEM格式的ca.key转换为Microsoft可以识别的pvk格式。
pvk -in ca.key -out ca.pvk -nocrypt -topvk
五 PKCS#12 到 PEM 的转换
openssl pkcs12 -nocerts -nodes -in cert.p12 -out private.pem
验证 openssl pkcs12 -clcerts -nokeys -in cert.p12 -out cert.pem
六 从 PFX 格式文件中提取私钥格式文件 (.key)
openssl pkcs12 -in mycert.pfx -nocerts -nodes -out mycert.key
七 转换 pem 到到 spc
openssl crl2pkcs7 -nocrl -certfile venus.pem -outform DER -out venus.spc
用 -outform -inform 指定 DER 还是 PAM 格式。例如：
openssl x509 -in Cert.pem -inform PEM -out cert.der -outform DER
八 PEM 到 PKCS#12 的转换，
openssl pkcs12 -export -in Cert.pem -out Cert.p12 -inkey key.pem